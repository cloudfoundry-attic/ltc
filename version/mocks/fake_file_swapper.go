// This file was generated by counterfeiter
package mocks

import (
	"os"
	"sync"

	"github.com/cloudfoundry-incubator/ltc/version"
)

type FakeFileSwapper struct {
	GetTempFileStub        func() (*os.File, error)
	getTempFileMutex       sync.RWMutex
	getTempFileArgsForCall []struct{}
	getTempFileReturns struct {
		result1 *os.File
		result2 error
	}
	SwapTempFileStub        func(destPath, srcPath string) error
	swapTempFileMutex       sync.RWMutex
	swapTempFileArgsForCall []struct {
		destPath string
		srcPath  string
	}
	swapTempFileReturns struct {
		result1 error
	}
}

func (fake *FakeFileSwapper) GetTempFile() (*os.File, error) {
	fake.getTempFileMutex.Lock()
	fake.getTempFileArgsForCall = append(fake.getTempFileArgsForCall, struct{}{})
	fake.getTempFileMutex.Unlock()
	if fake.GetTempFileStub != nil {
		return fake.GetTempFileStub()
	} else {
		return fake.getTempFileReturns.result1, fake.getTempFileReturns.result2
	}
}

func (fake *FakeFileSwapper) GetTempFileCallCount() int {
	fake.getTempFileMutex.RLock()
	defer fake.getTempFileMutex.RUnlock()
	return len(fake.getTempFileArgsForCall)
}

func (fake *FakeFileSwapper) GetTempFileReturns(result1 *os.File, result2 error) {
	fake.GetTempFileStub = nil
	fake.getTempFileReturns = struct {
		result1 *os.File
		result2 error
	}{result1, result2}
}

func (fake *FakeFileSwapper) SwapTempFile(destPath string, srcPath string) error {
	fake.swapTempFileMutex.Lock()
	fake.swapTempFileArgsForCall = append(fake.swapTempFileArgsForCall, struct {
		destPath string
		srcPath  string
	}{destPath, srcPath})
	fake.swapTempFileMutex.Unlock()
	if fake.SwapTempFileStub != nil {
		return fake.SwapTempFileStub(destPath, srcPath)
	} else {
		return fake.swapTempFileReturns.result1
	}
}

func (fake *FakeFileSwapper) SwapTempFileCallCount() int {
	fake.swapTempFileMutex.RLock()
	defer fake.swapTempFileMutex.RUnlock()
	return len(fake.swapTempFileArgsForCall)
}

func (fake *FakeFileSwapper) SwapTempFileArgsForCall(i int) (string, string) {
	fake.swapTempFileMutex.RLock()
	defer fake.swapTempFileMutex.RUnlock()
	return fake.swapTempFileArgsForCall[i].destPath, fake.swapTempFileArgsForCall[i].srcPath
}

func (fake *FakeFileSwapper) SwapTempFileReturns(result1 error) {
	fake.SwapTempFileStub = nil
	fake.swapTempFileReturns = struct {
		result1 error
	}{result1}
}

var _ version.FileSwapper = new(FakeFileSwapper)
